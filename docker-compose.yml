services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      default:
        aliases:
          - redis

  db:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=tkprojectdb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    container_name: backend
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tkprojectdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=adminpass
    depends_on:
      db:
        condition: service_healthy
      redis:
          condition: service_started

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:80"  # Assuming you want to map port 80 in the container to port 3000 on the host
    depends_on:
      - backend
networks:
  default:
    driver: bridge
